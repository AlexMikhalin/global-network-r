{"version":3,"file":"static/js/780.e3152f74.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1ZfcS\",\"posts\":\"MyPosts_posts__mp8gi\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__v2YH3\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n          <div className={s.item}>\r\n            <img src='https://n1s2.starhit.ru/6a/46/ae/6a46aeed947a183d67d1bc48211151bf/480x496_0_2bbde84177c9ff1c2299a26a0f69f69c@480x496_0xac120003_4430520541578509619.jpg' />\r\n           {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n             </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default  Post;","import React, { Component, PureComponent } from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(p => <Post \r\n    key={p.id}\r\n    message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n          {postsElements}\r\n        </div>\r\n      </div>;\r\n});\r\n\r\nfunction AddNewPostForm (props) {\r\n  return (\r\n    \r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field \r\n      name='newPostText' \r\n      component={Textarea} \r\n      placeholder={'Post message'}\r\n      validate={[requiredField , maxLengthCreator(10)]}/>\r\n    </div>\r\n    <div>\r\n        <button>Add button</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm)\r\n\r\nexport default  MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n     posts: state.profilePage.posts,\r\n     newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (newPostText) => {\r\n          dispatch(addPostActionCreator(newPostText));\r\n      }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default  MyPostsContainer; ","// extracted by mini-css-extract-plugin\nexport default {\"describtionBlock\":\"ProfileInfo_describtionBlock__51BNA\",\"mainPhoto\":\"ProfileInfo_mainPhoto__jZ-Ea\",\"contact\":\"ProfileInfo_contact__jGWYO\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) =>\r\n{\r\n\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect(() => {\r\n    setStatus(props.status);\r\n}, [props.status]);\r\n\r\nconst activateEditMode = () =>{\r\n    setEditMode(true);\r\n}\r\n\r\nconst deactivateEditMode = () =>{\r\n    setEditMode(false);\r\n   props.updateStatus(status)\r\n}\r\nconst onStatusChange = (e) =>{\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        { !editMode &&\r\n        <div>\r\n          <b> Status: </b>  <span onDoubleClick={ activateEditMode }>{props.status || ' Введите статус'}</span>\r\n        </div> \r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input\r\n            autoFocus={true}\r\n            onBlur={ deactivateEditMode }\r\n            onChange={onStatusChange}\r\n            value={status}\r\n            ></input>\r\n        </div>\r\n        }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\n const ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return  <form onSubmit={handleSubmit}>\r\n\r\n\r\n  <div><button onClick={() => {}}>save</button></div>\r\n\r\n  {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n<div>\r\n  <b>Full name: </b> {createField('Full name', 'fullName', [], Input)}\r\n    </div>\r\n  <div>\r\n  <b>Looking for a job: </b> {createField('','lookingForAJob', [], Input, {type: 'checkbox'})}\r\n    </div>\r\n\r\n  \r\n  <div>\r\n    <b>My professional skills:</b> \r\n    {createField('My professional skills','lookingForAJobDescription', [], Textarea, )}\r\n    </div>\r\n\r\n    <div>\r\n  <b>About me: </b>\r\n{createField('About me','aboutMe', [], Textarea, )}\r\n    </div>\r\n\r\n    <div>\r\n  <b>Contacts </b>: {Object.keys(profile.contacts).map(key =>{\r\n    return <div key={key} className={s.contact}>\r\n      <b>\r\n        {key} : {createField(key, 'contacts.' + key, [], Input)}\r\n      </b>\r\n    </div>\r\n  }) }\r\n    </div>\r\n</form>\r\n}\r\n\r\n\r\n// <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile-new'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!profile){\r\n      return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) =>{\r\n      if(e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n      }\r\n    } \r\n\r\n    const onSubmit =  (formData) =>{\r\n        saveProfile(formData).then(\r\n          () => {\r\n            setEditMode(false);\r\n          }\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <div className={s.describtionBlock}>\r\n            {profile && <img src={profile.photos.large || userPhoto} \r\n            className={s.mainPhoto} />}\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n          {editMode ? <ProfileDataForm \r\n          initialValues={profile}\r\n          profile={profile}\r\n          onSubmit={onSubmit}/> : <ProfileData \r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          goToEditMode={() => {setEditMode(true)}}\r\n          /> }\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return  <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n  <div>\r\n    <b>Full name: {profile.fullName} </b>\r\n      </div>\r\n    <div>\r\n    <b>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'} </b>\r\n      </div>\r\n\r\n    {profile.lookingForAJob && \r\n    <div>\r\n      <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n      </div>}\r\n\r\n      <div>\r\n    <b>About me: {profile.aboutMe} </b>\r\n      </div>\r\n\r\n      <div>\r\n    <b>Contacts </b>: {Object.keys(profile.contacts).map(key =>{\r\n      return <Contact key={key} contactTitle={key} \r\n      contactValue={profile.contacts[key]} />\r\n    }) }\r\n      </div>\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst Contact =({contactTitle, contactValue}) =>{\r\n  return <div className={s.contact}>\r\n    <b>\r\n      {contactTitle}\r\n    </b >: \r\n    {contactValue}\r\n  </div>\r\n}\r\n\r\nexport default  ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n      <div>\r\n          <ProfileInfo \r\n          isOwner={props.isOwner}\r\n           profile={props.profile} \r\n          status={props.status} \r\n          saveProfile={props.saveProfile}\r\n            updateStatus={props.updateStatus}\r\n            savePhoto={props.savePhoto}\r\n          />\r\n          <MyPostsContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default  Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\n\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from './withRouter';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProfileContainer = props => {\r\n\r\n  \r\n  let { userId } = useParams();\r\n  if(!userId) {\r\n    userId = this.props.authorizedUserId;\r\n    if(!userId){\r\n      this.props.history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.getUserProfile(userId);\r\n    props.getStatus(userId);\r\n  }, []);\r\n  return <Profile \r\n    {...props} \r\n    isOwner={!!userId}\r\n    profile={props.profile} \r\n    status={props.status} \r\n    updateStatus={props.updateStatus} \r\n    savePhoto={props.savePhoto}\r\n  />;\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","className","s","src","message","likesCount","MyPosts","React","postsElements","posts","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","requiredField","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","error","onClick","style","createField","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","initialValues","formData","then","compose","getUserProfile","getStatus","withRouter","withAuthRedirect","userId","useParams","authorizedUserId","history","push"],"sourceRoot":""}